# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.2
commands:
  public_ip_addresses:
   description: "get the public ip addresses of EC2 instances"
   steps:
     - run : aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:project,Values=udacity" --output text >> ~/inventory

# Use a package of configuration called an orb.
jobs:

  ansible_inventory:
    docker:
     - image: circleci/node:13.8.0
    steps:
     - aws-cli/setup
     - run:
        name: create inventory file
        command:
           echo [all] > ~/inventory
     - public_ip_addresses     
     - persist_to_workspace:
        root: ~/
        paths:
             - inventory
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
         name: echo output
         command:
          cat ~/inventory

    
  # cause_failure:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run : return 1
  #     - run :
  #         name: handle error
  #         command: echo "Hello Error"
  #         when: on_fail
  # use_commands:
  #    docker:
  #      - image: circleci/node:13.8.0
  #    steps:
  #      - print_pipeline_id
  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run:
  #        name: input 
  #        command:
  #         echo "hello world" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt

  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - attach_workspace:
  #         at: ~/
  #     - run:
  #        name: echo output
  #        command:
  #         cat ~/output.txt

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - ansible_inventory:
         context: udacity
      - print_output_file:
         requires:
           - ansible_inventory
      
      # - cause_failure
      # - use_commands
      # - save_hello_world_output
      # - print_output_file :
      #    requires :
      #      - save_hello_world_output
